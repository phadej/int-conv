cabal-version: 3.0
name:          int-conv
version:       1.0
build-type:    Simple
author:        Oleg Grenrus
maintainer:    Oleg Grenrus <oleg.grenrus@iki.fi>
license:       BSD-3-Clause
license-file:  LICENSE
homepage:      https://github.com/phadej/int-conv
category:      Data
synopsis:      Direct conversion functions between Ints and Words
description:
  This library defines a complete collection of conversion functions between machine integers:
  @wordToWord32@, @word32ToWord64@ etc.

  All these functions behave like @fromIntegral@, but avoid going through @Integer@. (GHC has a specific optimisation to remove an intermediate @Integer@ from @fromIntegral@ conversions, but if we can be explicit, and wont need to rely on an optimisation, why wouldn't we?)

  There are also conversion to/from @Char@. Convertions to @Char@ are __unsafe__, as these allow to create invalid @Char@ values (negative, or larger then maximum codepoint).
  In particular @intToChar@ is not the same as @chr@; @chr@ performs bounds check; @intToChar@ doesn't.
  Conversion from @Char@ are equivalent to @fromIntegral . ord@.
  Conversion to @Char@ are equivalent to @intToChar . fromIntegral@, which __does not__ perform bounds checks.

  Only GHC>=9.4 is supported, as the primitive integers had been reworked in GHC-9.4.

  This package deliberately doesn't provide any abstraction over the conversion functions.

tested-with:   GHC ==9.4.8 || ==9.6.6 || ==9.8.4 || ==9.10.1 || ==9.12.1

source-repository head
  type:     git
  location: https://github.com/phadej/int-conv.git

library
  default-language:   Haskell2010
  hs-source-dirs:     src
  exposed-modules:    Data.Int.Conv
  default-extensions: MagicHash
  build-depends:      base >=4.17.2.1 && <4.22

test-suite properties
  default-language: Haskell2010
  hs-source-dirs:   tests
  type:             exitcode-stdio-1.0
  main-is:          properties.hs
  build-depends:
    , base
    , int-conv
    , tasty
    , tasty-quickcheck
